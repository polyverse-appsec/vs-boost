{
  "name": "polyverse-boost-notebook",
  "displayName": "Polyverse Boost: Automatic Application Modernization",
  "description": "Polyverse Boost Application Modernization tool uses AI and source code analysis to find code bugs, security defects, generation documentation and convert to modern programming languages.",
  "publisher": "polyversecorporation",
  "license": "SEE LICENSE IN LICENSE",
  "homepage": "https://www.polyverse.com/boost/",
  "bugs": {
    "email": "support@polyverse.com"
  },
  "version": "0.9.4",
  "engines": {
      "vscode": "^1.77.0"
  },
  "categories": [
    "Machine Learning",
    "Testing",
    "Notebooks",
    "Programming Languages"
  ],
  "galleryBanner.color": "#F5F5F5",
  "icon": "resources/polyverse_vs_boost_logo.jpg",
  "activationEvents": [
    "onNotebook:polyverse-boost-notebook",
	"workspaceContains:*.boost-notebook",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Polyverse Boost",
      "properties": {
        "polyverse-boost-notebook.defaultDir": {
          "type": "string",
          "default": ".boost",
          "description": "Default directory for Polyverse Boost notebook save files"
        },
        "polyverse-boost-notebook.outputLanguage": {
          "type": "string",
          "default": "python",
          "description": "Default output language for Polyverse Boost automatic code conversion"
        },
        "polyverse-boost-notebook.testFramework": {
          "type": "string",
          "default": "pytest",
          "description": "Default test framework for Polyverse Boost automatic test code generation"
        },
        "polyverse-boost-notebook.defaultOrganization": {
          "type": "string",
          "default": "",
          "description": "Default organization for Polyverse Boost billing"
        }
      }
    },
    "commands": [
      {
        "command": "polyverse-boost-notebook.customerPortal",
        "title": "Polyverse Boost: Open Customer Portal"
      },
      {
        "command": "polyverse-boost-notebook.createJsonNotebook",
        "title": "Polyverse Boost: Create Analysis Notebook"
      },
      {
        "command": "polyverse-boost-notebook.loadCodeFile",
        "title": "Polyverse Boost: Load File",
        "icon": "$(file-code)"
      },
      {
        "command": "polyverse-boost-notebook.selectOutputLanguage",
        "title": "Conversion Output Language",
        "icon": "$(code)"
      },
      {
        "command": "polyverse-boost-notebook.selectTestFramework",
        "title": "Select Test Framework",
        "icon": "$(checklist)"
      },
      {
        "command": "polyverse-boost-notebook.processCurrentFile",
        "title": "Polyverse Boost: Analysis from File",
        "icon": "$(file)"
      },
      {
        "command": "polyverse-boost-notebook.processCurrentFolder",
        "title": "Polyverse Boost: Analysis from Folder",
        "icon": "$(folder)"
      }
    ],
    "notebooks": [
      {
        "type": "polyverse-boost-notebook",
        "displayName": "Boost Notebook",
        "selector": [
          {
            "filenamePattern": "*.boost-notebook"
          }
        ]
      }
    ],
    "menus": {
      "notebook/toolbar": [
        {
          "command": "polyverse-boost-notebook.loadCodeFile",
          "when": "notebookType == 'polyverse-boost-notebook'",
          "group": "navigation@1"
        },
        {
          "command": "polyverse-boost-notebook.selectOutputLanguage",
          "when": "notebookType == 'polyverse-boost-notebook'",
          "group": "navigation@2"
        },
        {
          "command": "polyverse-boost-notebook.selectTestFramework",
          "when": "notebookType == 'polyverse-boost-notebook'",
          "group": "navigation@3"
        }
      ],
      "explorer/context": [
        {
            "command": "polyverse-boost-notebook.processCurrentFile",
            "when":
                "resourceExtname == .ts || resourceExtname == .js || resourceExtname == .c || resourceExtname == .cpp || resourceExtname == .ts || resourceExtname == .html || resourceExtname == .css || resourceExtname == .json || resourceExtname == .xml || resourceExtname == .md || resourceExtname == .py || resourceExtname == .h || resourceExtname == .hpp || resourceExtname == .cs || resourceExtname == .java || resourceExtname == .go || resourceExtname == .rb || resourceExtname == .php || resourceExtname == .swift || resourceExtname == .kt || resourceExtname == .m || resourceExtname == .ps1 || resourceExtname == .pl || resourceExtname == .groovy || resourceExtname == .lua || resourceExtname == .rs || resourceExtname == .sh || resourceExtname == .bash || resourceExtname == .r || resourceExtname == .yml || resourceExtname == .yaml || resourceExtname == .fs || resourceExtname == .fsx || resourceExtname == .vb",
            "group": "navigation"
        },
        {
            "command": "polyverse-boost-notebook.processCurrentFolder",
            "when":
                "(resourceScheme == 'file' && resourceLangId == 'unknown' && resourceExtname == '')",
            "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "clean": "rm -rf out",

    "build-instructions": "bash ./build_instructions.sh raw_instructions.md >./src/instructions.json",

    "compile": "npm run build-instructions && tsc -p ./",
    "watch": "tsc -watch -p ./",

    "lint": "eslint src --ext ts",

    "copy:test-data": "mkdir -p out/test && cp -R src/test/resources out/test/resources",
    "pretest": "npm run clean && npm run compile && npm run lint && npm run copy:test-data",
    
    "esbuild-base": "npm run build-instructions && esbuild ./src/*.ts --outdir=./out/ --bundle --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",

    "esbuild-pretest": "npm run clean && npm run esbuild && npm run lint && npm run copy:test-data",

    "test": "node ./out/test/runTest.js",

    "vscode:prepublish": "npm run esbuild-base -- --minify",

    "prepublish-pretest": "npm run clean && npm run vscode:prepublish && npm run copy:test-data",

    "package": "vsce package --allow-missing-repository --out ./out/"
},
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "4.14.192",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/sinon": "10.0.13",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "esbuild": "^0.17.15",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "lodash": "^4.17.21",
    "mocha": "^10.2.0",
    "sinon": "^15.0.3",
    "typescript": "^4.9.5",
    "vscode-extension-tester": "^5.5.1"
  },
  "dependencies": {
    "axios": "^1.3.4"
  }
}
