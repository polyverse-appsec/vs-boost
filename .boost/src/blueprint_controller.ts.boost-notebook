{
  "cells": [
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "0",
      "value": "import {\n    KernelControllerBase\n } from './base_controller';\n",
      "kind": 2,
      "metadata": {
        "id": 0,
        "type": "originalCode",
        "lineNumberBase": -1
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "1",
      "value": "import { BoostConfiguration } from './boostConfiguration';\n",
      "kind": 2,
      "metadata": {
        "id": 1,
        "type": "originalCode",
        "lineNumberBase": 2
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "2",
      "value": "import * as vscode from 'vscode';\nimport { BoostNotebookCell } from './jupyter_notebook';\n",
      "kind": 2,
      "metadata": {
        "id": 2,
        "type": "originalCode",
        "lineNumberBase": 4
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "3",
      "value": "import { generateCellOutputWithHeader } from './extension';\n",
      "kind": 2,
      "metadata": {
        "id": 3,
        "type": "originalCode",
        "lineNumberBase": 5
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "4",
      "value": "import { ControllerOutputType } from './controllerOutputTypes';\n",
      "kind": 2,
      "metadata": {
        "id": 4,
        "type": "originalCode",
        "lineNumberBase": 6
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "5",
      "value": "\nexport const blueprintKernelName = 'blueprint';\nconst blueprintOutputHeader = 'Architectural Blueprint';\n\nexport class BoostArchitectureBlueprintKernel extends KernelControllerBase {\n\tconstructor(context: vscode.ExtensionContext, onServiceErrorHandler: any, otherThis : any, collection: vscode.DiagnosticCollection) {\n        super(\n            collection,\n            blueprintKernelName,\n            'Architectural Blueprint Code',\n            'Builds Archiectural Blueprint of targeted source code by identifying architectural principles, patterns, licensing, performance, etc.',\n            ControllerOutputType.blueprint,\n            blueprintOutputHeader,\n            false,\n            false,\n            context,\n            otherThis,\n            onServiceErrorHandler);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t}\n\n    public get serviceEndpoint(): string {\n        switch (BoostConfiguration.cloudServiceStage)\n        {\n            case \"local\":\n                return 'http://127.0.0.1:8000/blueprint';\n            case 'dev':\n                return 'https://67wxr6xq76bj5jiaoct5qjzble0wfmdt.lambda-url.us-west-2.on.aws/';\n            case \"test\":\n                return 'https://igmvzc3rb3i7ftqm5ozzhpxa5m0xzuae.lambda-url.us-west-2.on.aws/';\n            case 'staging':\n            case 'prod':\n            default:\n                return 'https://hb34ftyxhjnd7jvxbmlsmddct40hvrni.lambda-url.us-west-2.on.aws/';\n        }\n    }\n\n    readonly kernelMarkdownPrefix = \"Architectural Blueprint\\n\";\n\n\n    onKernelOutputItem(\n        response: any,\n        cell : vscode.NotebookCell | BoostNotebookCell,\n        mimetype : any) : string {\n\n        if (response.blueprint === undefined) {\n            throw new Error(\"Unexpected missing data from Boost Service\");\n        }\n        return generateCellOutputWithHeader(this.outputHeader, response.blueprint);\n    }\n}\n",
      "kind": 2,
      "metadata": {
        "id": 5,
        "type": "originalCode",
        "lineNumberBase": 11
      }
    }
  ],
  "metadata": {
    "defaultDir": ".boost",
    "sourceFile": "./src/blueprint_controller.ts"
  }
}