{
  "cells": [
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "0",
      "value": "import axios from 'axios';\nimport { boostLogging } from './boostLogging';\n",
      "kind": 2,
      "metadata": {
        "id": 0,
        "type": "originalCode",
        "lineNumberBase": 0
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "1",
      "value": "import { BoostConfiguration } from './boostConfiguration';\n",
      "kind": 2,
      "metadata": {
        "id": 1,
        "type": "originalCode",
        "lineNumberBase": 1
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "2",
      "value": "import { fetchGithubSession } from './authorization';\n",
      "kind": 2,
      "metadata": {
        "id": 2,
        "type": "originalCode",
        "lineNumberBase": 2
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "3",
      "value": "import { mapError } from './error';\n",
      "kind": 2,
      "metadata": {
        "id": 3,
        "type": "originalCode",
        "lineNumberBase": 3
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "4",
      "value": "\nfunction orgServiceEndpoint(): string {\n    switch (BoostConfiguration.cloudServiceStage)\n    {\n        case \"local\":\n            return 'http://127.0.0.1:8000/user_organizations';\n        case 'dev':\n            return 'https://cro3oyez4g56b33hvglfwytg3q0alxrz.lambda-url.us-west-2.on.aws/';\n        case \"test\":\n            return 'https://cx7j5efr47xhnyyusattghf3q40hewnv.lambda-url.us-west-2.on.aws/';\n        case 'staging':\n        case 'prod':\n        default:\n            return 'https://ptb5spl6kvsuioc5zkrgyncrve0jyrew.lambda-url.us-west-2.on.aws/';\n    }\n}\n",
      "kind": 2,
      "metadata": {
        "id": 4,
        "type": "originalCode",
        "lineNumberBase": 5
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "5",
      "value": "\n// Define a type for the orgs object\nexport type UserOrgs = {\n    organizations: string[];\n    email: string;\n    personal: string;\n};\n",
      "kind": 2,
      "metadata": {
        "id": 5,
        "type": "originalCode",
        "lineNumberBase": 22
      }
    },
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "application/vnd.code.notebook.error",
              "data": "Error: Boost Code Explanation failed: Boost Cloud Service could not be resolved. Please check your internet connection, and try again."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "typescript",
      "id": "6",
      "value": "\nexport async function fetchUserOrganizationsServiceRequest(): Promise<UserOrgs> {\n    try {\n        if (BoostConfiguration.serviceFaultInjection > 0 &&\n            (Math.floor(Math.random() * 100) < BoostConfiguration.serviceFaultInjection)) {;\n            boostLogging.debug(`Injecting fault into service request fetching organizations`);\n            await axios.get('https://serviceFaultInjection/synthetic/error/');\n        }\n\n        const headers = {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            'User-Agent': `Boost-VSCE/${BoostConfiguration.version}`\n        };\n    \n        const session = await fetchGithubSession();       // get the session\n        const payload = {\n            \"session\": session.accessToken,\n        };\n    \n        const result = await axios.post(orgServiceEndpoint(), payload, { headers });\n        if (result && result.data && result.data.error) { // if we have an error, throw it - this is generally happens with the local service shim\n            throw new Error(`Boost Service failed to access GitHub User Organizations with a network error: ${result.data.error}`);\n        }\n        return result.data;\n    } catch (err : any) {\n        throw mapError(err);\n    }\n}\n",
      "kind": 2,
      "metadata": {
        "id": 6,
        "type": "originalCode",
        "lineNumberBase": 28
      }
    }
  ],
  "metadata": {
    "defaultDir": ".boost",
    "sourceFile": "./src/user_organizations.ts"
  }
}