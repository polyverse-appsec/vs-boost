{
  "cells": [
    {
      "outputs": [
        {
          "items": [
            {
              "mime": "text/markdown",
              "data": "\n\n---\n\n### Boost Code Explanation\n\nLast Updated: Wednesday, July 12, 2023 at 6:05:59 PM PDT\n\nThis is a set of release notes for the Polyverse Boost Automatic Application Modernization software. Release notes are typically used to communicate the changes in each version of the software to the users. They include new features, enhancements, bug fixes, and known issues.\n\nThe software seems to have started at version 0.5.0 on February 28, 2023, and has been updated several times since then, with the latest version being 1.1.0 as of July 12, 2023. \n\nThe software supports multiple programming languages such as Python, Ruby, Swift, Rust, JavaScript, TypeScript, and C#. It has features for analyzing code for bugs and security issues, generating unit test cases in Python, and creating documentation for functions in source files.\n\nOver time, new features have been added like support for more programming languages (Perl, CoffeeScript, XSLT), processing all files in a project, evaluating source for best practices and coding guidelines, reviewing code for Data, Privacy and Personal Info Compliance issues, and many others.\n\nEnhancements have been made to improve user experience, error handling, and the performance of the software. \n\nBug fixes have been made to address issues identified in the software, ensuring it functions as expected.\n\nThe software seems to follow a versioning scheme where the first number represents a major version, the second number represents a minor version, and the third number represents a patch or bug fix. This is a common practice in software development and is known as Semantic Versioning.\n\nThe release notes do not include any code, so there's no specific algorithm or architectural guideline to discuss here. However, they provide a good overview of the evolution of the software over time, the problems that have been addressed, and the new capabilities that have been added."
            }
          ],
          "metadata": {
            "outputType": "explainCode",
            "details": []
          }
        }
      ],
      "languageId": "markdown",
      "id": "0",
      "value": "Polyverse Boost Automatic Application Modernization\n======================\n\n# Release Notes\n\n## Version 1.1.0: July 12th, 2023\n\n### New Features\n- Significantly improved UX around scan progress tracking, reliability in Summary View in Activity Bar\n    - includes visualization of individual files and folders\n    - includes visual color coding for status of each file and folder and type of scan\n    - improved performance of UI updates, reduced startup time, and improved reliability when restarting VSC or reopening Activity tab\n- Introducing Sara, the Boost Smart Architectural Reasoning Assistant, who can answer questions about Boost-analyzed software projects.\n- New Performance analysis Kernel - characterizes performance of code and potential issues with 3rd party frameworks\n- New Performance quick-scan source analysis Kernel - scans code for specific issues in code and creates problems and solutions for followup\n- Added Quick Draft Architectural Blueprint Summary Kernel - based on hints about project structure, files and data\n    NOTE: Quick blueprints are only generated when a detailed Summary blueprint is not available\n- Added Project-level Analysis Command - processProject - which supports Quick Blueprint only currently\n\n### Enhancements\n- Deep code analysis runs after quick doc, compliance and security scans\n- Chat requests now integrate overall project summary blueprint and guidelines as part of the analysis\n- Improved error handling for network errors when processing Chat requests\n\n### Bug Fixes\n- Fixed a bug where some source file analysis was failing due to line number issues\n- Do not include Errors in summarization of cells and notebooks\n- Fix issue with Summaries of output including duplicate timestamps and headers\n- Fix path normalization issue with Boost folders on Windows platform\n\n## Version 1.0.4: June 28, 2023\n\n### New Features\n- Enable User-Editable Project Guidelines and Best Practices to be used in analysis\n- New command showGuidelines to show the the editable Guidelines for the Project or any specific area (e.g. Security, Documentation, Compliance, etc.)\n\n### Enhancements\n- Boost will not analyze binary files (e.g. images, movies, zip files, etc) - and will not generate Boost Notebooks\n\n### Bug Fixes\n- Fix bug in Boost Activity Tab 'Start' panel Summary link causing creation of invalid Summary file (invalid JSON error)\n- Fix Chat to use the latest Analysis Summary for all processing\n- Display Flow Diagrams in Documentation Summary Activity Bar tab\n- Fix issue with empty Analysis summaries not printing a message\n- Fix issue with Analysis Summary not being loaded correctly into the Chat context on startup\n- Remove redundant 'model' radio button from Chat window - default is used, unless the Boost configuration is changed on the project\n- Don't persist chat errors - to ensure they aren't used with the later analysis\n\n## Version 1.0.3: June 23, 2023\n\n### New Features\n- New Fast Data and Privacy Compliance Scan with source line mapping and solution recommendations\n\n### Enhancements\n- N/A\n\n### Bug Fixes\n- Fix potential timing issue with Jobs reporting in Summary Activity Bar tab\n- Enable Fast Security Scan in Summary Activity Bar Tab\n\n## Version 1.0.2: June 23, 2023\n\n### New Features\n- New Fast Security Scan with source line mapping and solution recommendations\n- New Boost specific Diagnostic/Problems tab - showing identified issues in source code with analysis and line numbers and link to original file\n    NOTE: Currently, existing Boost Notebooks will need to be rebuilt from original source to include precise source line mappings\n\n### Enhancements\n- Improvements to Mermaid rendering in Summary views\n\n### Bug Fixes\n- Fix issue with Boost Activity Bar 'Run All' handling of checked Analysis Types\n- Fix missing Mime-Type in some Test Generation outputs\n\n### Known Issues\n- N/A\n\n## Version 1.0.1: June 22, 2023\n\n### New Features\n- Building and showing exported results in HTML format (PDF and Markdown previously supported)\n- Enable analysis of selected text in Source Code Text Editor - via right-click \"Boost Analyze Selected Text\" command\n- Enable AI Chat window for Source and Architectural analysis\n\n### Enhancements\n- Use File Explorer right-click commands to show Analysis details and Summaries for all Source files and Project\n- Improved handling for Git errors when Git software is not installed\n\n### Bug Fixes\n- Disable Chat text box while Boost Cloud Service is processing request\n- Fix issue with Chat history on secondary chat windows\n- Enable closing of 1st chat window when multiple chat windows are open\n\n### Known Issues\n- Flow Diagrams may not render correctly in Summary view\n\n## Version 1.0.0: June 19, 2023\n\n### New Features\n- N/A\n\n### Enhancements\n- Support for processing large files and large functions\n- Add support for Paste to Chat window text box\n- Add support for any 'unknown' text file to be loaded and analyzed - regardless of file extension, or no file extension\n- Improved resiliency of batch-mode and large input processing\n- Improved Boost UX tab to show progress and status of Summarization of all analysis across project\n- Improved resiliency of client and server under load or at peak processing times\n\n### Bug Fixes\n- Fixed broken Chat button when a Boost Cloud Service failure occurs\n- Ensure error message is saved to cell Output\n\n### Known Issues\n- Flow Diagrams may not render correctly in Summary view\n\n## Version 0.9.9: June 10, 2023\n\n### New Features\n- new UX - Boost Tab view on left side of Visual Studio Code, includes:\n  * Introduction to Boost with \"Analyze All\" button\n  * Project Analysis Summary view - status of all files in a project\n  * Live Chat window enabling iterative analysis, questions and AI-enabled recommendations based on the Project Blueprints, Analysis and documentation\n  * Summarized analysis across Project - including Documentation, Architectural Blueprint, Data Compliance, and Security Vulnerabilities\n- Summary analysis of a complete source file is available in the side-by Boost Notebook file (e.g. `SOURCE_FILENAME.summary.boost-notebook`)\n- Summary analysis of an entire project or folder is available in the side-by Boost Notebook file (e.g. `PROJECT_NAME_OR_FOLDER_NAME.summary.boost-notebook`)\n\n### Enhancements\n- Running analysis across a source file will only refresh the Error or missing Outputs (refresh always is available by Configuration Setting)\n- Flow Control diagrams show function name in the diagram, and calls to external functions and libraries\n- Analysis of folders and files will now include popular build/project file formats, including Makefiles, CMakeLists.txt, and XCode, Maven, Gradle, Rakefile, and Visual Studio project files\n- Launching \"Process\" of a file or folder/project will automatically create Boost notebooks from the source files\n- Right-Click any source file in the Explorer and select \"Open Detailed Analysis Notebook\" or \"Open Summary Analysis Notebook\" to open existing analysis or load it for manual analysis\n\n### Bug Fixes\n- Fixed bug creating Boost Notebooks for a standalone source file outside of a loaded Workspace folder\n- Fixed bug where right-click didn't open a new Boost Notebook if current active window has a Boost Notebook already open\n\n## Version 0.9.8: May 26, 2023\n\n### New Features\n- Add support for CoffeeScript code files\n- Add support for XSLT code files\n\n### Enhancements\n- Added a dividing horizontal line between analysis results in the Notebook Cell Outputs (visual UI, Markdown, and PDF)\n\n### Bug Fixes\n- N/A\n\n## Version 0.9.7: May 18, 2023\n\n### New Features\n- Enabled Automated Folder and Project analysis with Boost kernel commands\n- Enabled Boost kernel commands to be run from the Visual Studio Code Command API\n- Enabled Boost kernel command to be selected via User configuration setting\n- Enabled Boost kernel command search by Title, Description or Command name\n- Enabled Markdown doc generation from Boost analysis of Source Files - using new \"Generate Markdown\" command\n- Enabled PDF doc generation from Boost analysis of Source Files - using new \"Generate PDF\" command\n\n### Enhancements\n- Updated Command titles and descriptions for clarity\n- Improved error handling for Boost Service issues\n- Added Support for Perl Module (PM) files for right-click commands\n\n### Bug Fixes\n- Fix issue with building Notebook file from source when no Workspace folder is open\n- Fix issue with default configuration values for Test Framework and Default Output Directory\n- Fixed broken Marketplace link in README (cheers and thank you, customer!)\n- Fixed potential issue with some individual source files being parsed and loaded into a new Notebook (cheers thank you, customer!)\n\n## Version 0.9.6: May 12, 2023\n\n### Enhancements\n- Updated Boost Status bar to show current Boost subscription status and payment status\n\n### Bug Fixes\n- Miscaellaneous bug fixes, including intermittent issue with code conversion.\n\n## Version 0.9.5: May 2, 2023\n\n### New Features\n- Added usage-based Metered billing for Teams and Enterprise licensing\n- Added Customer Account portal UI for managing licenses and billing input only\n- Added support for using GitHub organization as Customer id\n    NOTE: Existing customers may need to re-authorize GitHub access for Boost due access \"Organization\" info\n\n### Enhancements\n- Enabled Folder and Project processing to build Notebook files in background as files - avoid opening Notebook files in Editor\n- Improved visual error messages when an error occurs processing an entire project or folder\n- Added analysis of software licenses used in source code to the Architectural Blueprint Summary report\n\n## Version 0.9.4: April 24, 2023\n\n### New Features\n- Added support for processing all files in a Project via Command menu \"Boost Analysis from Folder\"\n- Added support for processing multiple files in a Folder via Right-Click menu \"Boost Analysis from Folder\"\n- Added support for .boostignore file in workspace root to exclude files from processing (during Project/Folder processing)\n- Added support for Architectural Blueprint Summary report across functions and files\n\n### Enhancements\n- Improved error messages on some network timeouts\n- Source Analysis (Data Compliance, Security Vulnerabilities, etc) include links to online web resources to additional education and background\n- Test Code Generation includes links to training material on recommended test design and test framework\n\n### Bug Fixes\n- Enable support for processing Perl Module files (*.pm)\n- Fix issue where Compliance analysis results overwrote Explanation analysis results\n\n## Version 0.9.3: April 19, 2023\n\n### New Features\n- Added support for evaluating source for best practices, coding guidelines, and recommendations\n\n### Enhancements\n- Errors during Boost processing now explicitly show the Kernel used in the message\n\n### Bug Fixes\n\n## Version 0.9.2: April 17, 2023\n\n### New Features\n- Added support for reviewing code for Data, Privacy and Personal Info Compliance issues\n- Added support for right-clicking on a file in the Explorer and selecting \"Boost Analysis from File\"\n- Added support for running analysis against current active window/source file by using \"Boost Analysis from File\" command\n- Added support for C/C++ Header file processing (e.g. .h, .hpp)\n- Added support for displaying Analysis Problems in the Problems panel, including link to the source file if available\n- Added support for Output panel to display Boost logging - named \"Polyverse Boost\"\n\n### Enhancements\n- Improved user message for mismatch between email used for GitHub account and Polyverse license.\n- User-added Cells with code can now be submitted for all Boost kernels.\n- Improved serialization of Notebooks to include metadata, such as output language and test framework\n- Improved error reporting to print to Output panel, and only display one Error window when \"Run All\" is executed\n- Improved Extension startup availability by activating when any Boost Notebook is opened or loaded on startup\n- Improved error messages for intermittent network issues to Polyverse servers\n\n### Bug Fixes\n- Fixed handling of nested brackets/braces in Python code\n- Do not create whitespace only Cells\n\n## Version 0.9.1: April 10, 2023\n\n### New Features\n- Support for Perl programming language - explaining Perl code, and converting to another language\n### Enhancements\n- Improved messages when reloading or replacing existing source code.\n- User-added Cells with code can now be submitted for all Boost kernels.\n\n### Bug Fixes\n- Fixed handling of nested brackets/braces in Python code\n- Do not create whitespace only Cells\n\n## Version 0.9.0: April 4, 2023\n### Enhancements\n- Improvements to Marketplace display of product installation and usage instructions\n- Significantly reduced Extension package size and increased startup time\n\n## Version 0.8.0: March 27, 2023\n### Enhancements\n- Show Boost logging in Visual Studio Code Output window\n\n### Bug Fixes\n- Fix bug causing error output to be lost during Notebook cell update\n\n## Version 0.7.0: March 25, 2023\n### New Features\n- Support for Visual Studio Code Marketplace\n\n## Version 0.6.0: March 13, 2023\n### New Features\n- Support for code conversion (\"modernization\") by selecting target programming language\n\n## Version 0.5.0: February 28, 2023\n### New Features\n- Support for creating Notebooks and Source Code Analysis\n- Support for programming languages:\n  - Python\n  - Ruby\n  - Swift\n  - Rust\n  - JavaScript\n  - TypeScript\n  - C\\#\n- Support for analyzing code for bugs and security issues\n- Support for generating unit test cases in Python\n- Support for generating documentation for functions in source files\n\n",
      "kind": 2,
      "metadata": {
        "id": 0,
        "type": "originalCode",
        "lineNumberBase": -1
      }
    }
  ],
  "metadata": {
    "defaultDir": ".boost",
    "sourceFile": "./CHANGELOG.md"
  }
}